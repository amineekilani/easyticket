{% extends 'base.html.twig' %}
{% block title %}Gestion des stades{% endblock %}
{% block body %}
    <div class="container mx-auto px-4 py-8 overflow-auto">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold text-gray-800">Gestion des stades</h1>
            </div>
            <a href="{{ path('app_stade_new') }}" class="mt-4 md:mt-0 inline-flex items-center px-4 py-2 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg transition duration-200">
                <i class="fas fa-plus-circle mr-2"></i>
                Ajouter un stade
            </a>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
            <div class="bg-white rounded-lg shadow p-4">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-red-100 text-red-600 mr-4">
                        <i class="fas fa-building text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500">Nombre de stades</p>
                        <h3 class="text-2xl font-bold">{{ stades|length }}</h3>
                    </div>
                </div>
            </div>
            <div class="bg-white rounded-lg shadow p-4">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-green-100 text-green-600 mr-4">
                        <i class="fas fa-users text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500">Capacité totale</p>
                        <h3 class="text-2xl font-bold">
                            {% set total = 0 %}
                            {% for stade in stades %}
                                {% set total = total + stade.capaciteVirage + stade.capacitePelouse + stade.capaciteEnceinte %}
                            {% endfor %}
                            {{ total|number_format }}
                        </h3>
                    </div>
                </div>
            </div>
            <div class="bg-white rounded-lg shadow p-4">
                <div class="flex items-center">
                    <div class="p-3 rounded-full bg-purple-100 text-purple-600 mr-4">
                        <i class="fas fa-map-marker-alt text-xl"></i>
                    </div>
                    <div>
                        <p class="text-sm text-gray-500">Villes</p>
                        <h3 class="text-2xl font-bold">
                            {% set cities = [] %}
                            {% for stade in stades %}
                                {% if stade.ville not in cities %}
                                    {% set cities = cities|merge([stade.ville]) %}
                                {% endif %}
                            {% endfor %}
                            {{ cities|length }}
                        </h3>
                    </div>
                </div>
            </div>
        </div>
        {% if stades|length > 0 %}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {% for stade in stades %}
                    <div class="stadium-card bg-white rounded-xl shadow-md overflow-hidden transition duration-300 hover:shadow-lg hover:-translate-y-1">
    <!-- Image with gradient overlay -->
    <div class="stadium-image h-48 relative overflow-hidden">
        <img 
            src="{{ stade.photo ? asset('uploads/stades/' ~ stade.photo) : asset('images/default-stadium.png') }}"
            alt="{{ stade.nom }}"
            class="w-full h-full object-cover transition duration-500 hover:scale-105"
        >
        <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent"></div>
        <!-- Total capacity badge -->
        <span class="absolute top-4 right-4 bg-white/90 text-gray-900 font-bold px-3 py-1 rounded-full text-sm shadow-sm">
            {{ (stade.capaciteVirage + stade.capacitePelouse + stade.capaciteEnceinte)|number_format }}
        </span>
    </div>
    
    <div class="p-5">
        <!-- Header with name and location -->
        <div class="mb-4">
            <h3 class="text-xl font-bold text-gray-900 mb-1 line-clamp-1">{{ stade.nom }}</h3>
            <div class="flex items-center text-gray-600">
                <i class="fas fa-map-marker-alt mr-2 text-sm text-red-500"></i>
                <span class="text-sm">{{ stade.ville }}</span>
            </div>
        </div>
        
        <!-- Capacity progress bars -->
        <div class="space-y-3 mb-5">
            <div>
                <div class="flex justify-between text-xs mb-1">
                    <span class="text-gray-600 font-medium">Virage</span>
                    <span class="font-semibold text-gray-700">{{ stade.capaciteVirage|number_format }}</span>
                </div>
                <div class="w-full bg-gray-100 rounded-full h-2">
                    <div class="bg-amber-500 h-2 rounded-full" style="width: {{ (stade.capaciteVirage / (stade.capacitePelouse + stade.capaciteEnceinte + stade.capaciteVirage) * 100) > 100 ? 100 : (stade.capaciteVirage / (stade.capacitePelouse + stade.capaciteEnceinte + stade.capaciteVirage) * 100) }}%"></div>
                </div>
            </div>
            
            <div>
                <div class="flex justify-between text-xs mb-1">
                    <span class="text-gray-600 font-medium">Pelouse</span>
                    <span class="font-semibold text-gray-700">{{ stade.capacitePelouse|number_format }}</span>
                </div>
                <div class="w-full bg-gray-100 rounded-full h-2">
                    <div class="bg-emerald-500 h-2 rounded-full" style="width: {{ (stade.capacitePelouse / (stade.capacitePelouse + stade.capaciteEnceinte + stade.capaciteVirage) * 100) > 100 ? 100 : (stade.capacitePelouse / (stade.capacitePelouse + stade.capaciteEnceinte + stade.capaciteVirage) * 100) }}%"></div>
                </div>
            </div>
            
            <div>
                <div class="flex justify-between text-xs mb-1">
                    <span class="text-gray-600 font-medium">Enceinte</span>
                    <span class="font-semibold text-gray-700">{{ stade.capaciteEnceinte|number_format }}</span>
                </div>
                <div class="w-full bg-gray-100 rounded-full h-2">
                    <div class="bg-blue-500 h-2 rounded-full" style="width: {{ (stade.capaciteEnceinte / (stade.capacitePelouse + stade.capaciteEnceinte + stade.capaciteVirage) * 100) > 100 ? 100 : (stade.capaciteEnceinte / (stade.capacitePelouse + stade.capaciteEnceinte + stade.capaciteVirage) * 100) }}%"></div>
                </div>
            </div>
        </div>
        
        <!-- Action buttons -->
        <div class="flex justify-between pt-4 border-t border-gray-100">
            <a href="{{ path('app_stade_show', {'id': stade.id}) }}" 
                class="text-red-600 hover:text-red-800 font-medium flex items-center text-sm px-3 py-2 rounded-lg hover:bg-red-50 transition">
                <i class="fas fa-eye mr-2"></i> Détails
            </a>
            <a href="{{ path('app_stade_edit', {'id': stade.id}) }}" 
               class="text-gray-600 hover:text-gray-800 font-medium flex items-center text-sm px-3 py-2 rounded-lg hover:bg-gray-50 transition">
                <i class="fas fa-edit mr-2"></i> Modifier
            </a>
        </div>
    </div>
</div>
                {% endfor %}
            </div>
        {% else %}
            <div class="bg-white rounded-xl shadow-md overflow-hidden p-8 text-center">
                <div class="mx-auto h-24 w-24 text-gray-400 mb-4">
                    <i class="fas fa-stadium text-6xl opacity-50"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">Aucun stade trouvé</h3>
                <a href="{{ path('app_stade_new') }}" class="inline-flex items-center px-4 py-2 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg transition duration-200">
                    <i class="fas fa-plus-circle mr-2"></i> Ajoutez le premier stade
                </a>
            </div>
        {% endif %}
    </div>
{% endblock %}