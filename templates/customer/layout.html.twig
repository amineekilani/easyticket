{# templates/Client/clientLayout.html.twig #}
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}EasyTicket{% endblock %}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="icon" href="{{ asset('easy-ticket-logo.png') }}" type="image/png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    {% block stylesheets %}
        <style>
            /* Layout global */
            .nav-link:hover {
                color: #ef4444;
            }
            .nav-link.active {
                color: #ef4444;
                border-bottom: 2px solid #ef4444;
            }
            /* Panier */
            .qr-code {
                width: 150px;
                height: 150px;
                background-color: #fff;
                padding: 10px;
                border: 1px solid #ddd;
            }
            /* Footer (ajoutez vos classes spécifiques ici) */
            .footer-link:hover {
                text-decoration: underline;
            }
            .user-menu {
                min-width: 10rem;
            }
            .user-menu a {
                transition: all 0.2s ease;
            }
        </style>{% endblock %}
</head>
<body class="bg-gray-50">

{# --- HEADER --- #}
<header class="bg-white shadow-md">
    <div class="container mx-auto px-4 py-4 flex justify-between items-center">
        <div class="flex items-center space-x-2">
            <i class="fas fa-futbol text-3xl text-red-600"></i>
            <h1 class="text-2xl font-bold text-gray-800">EasyTicket</h1>
        </div>
        <nav class="hidden md:flex space-x-8">
            <a href="{{ path('app_customer') }}" class="nav-link text-gray-600 hover:text-red-600 font-medium">Accueil</a>
            <a href="{{ path('app_customer_matchs') }}" class="nav-link text-gray-600 hover:text-red-600 font-medium">Matchs</a>
            <a href="{{ path('app_tickets') }}" class="nav-link text-gray-600 hover:text-red-600 font-medium">Mes Billets</a>
            <a href="{{ path('app_commandes') }}" class="nav-link text-gray-600 hover:text-red-600 font-medium">Mes Commandes</a>
        </nav>
        <div class="flex items-center space-x-4">
            {% if app.user %}
                <div class="relative">
                    <button id="userMenuButton" class="flex items-center space-x-2 text-gray-600 font-medium focus:outline-none">
                        <i class="fas fa-user text-red-600"></i>
                        <span>{{ app.user.name }}</span>
                        <i class="fas fa-chevron-down text-gray-600"></i>
                    </button>
                    <div id="userMenu" class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-50 user-menu hidden">
                        <a href="{{ path('app_profile_edit') }}" class="block px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-red-600">Modifier le profil</a>
                        <a href="{{ path('app_logout') }}" class="block px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-red-600">Déconnexion</a>
                    </div>
                </div>
            {% else %}
                <a href="{{ path('app_login') }}" class="text-red-600 hover:underline">Connexion</a>
                <a href="{{ path('app_register') }}" class="bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700">Inscription</a>
            {% endif %}
            <a href="#" id="cartBtn" class="relative">
                <i class="fas fa-shopping-cart text-xl text-gray-600"></i>
                <span id="cartCount" class="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center hidden">0</span>
            </a>
        </div>
    </div>
</header>

{# --- CONTENU PRINCIPAL --- #}
<main>
    {% block body %}{% endblock %}
    <!-- Cart Sidebar -->
    <div id="cartSidebar" class="fixed top-0 right-0 h-full w-full md:w-96 bg-white shadow-lg transform translate-x-full transition-transform duration-300 z-50">
        <div class="h-full flex flex-col">
            <div class="p-6 border-b border-gray-200">
                <div class="flex justify-between items-center">
                    <h3 class="text-xl font-bold">Votre panier</h3>
                    <button id="closeCart" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times text-2xl"></i>
                    </button>
                </div>
            </div>

            <div id="cartItems" class="flex-1 overflow-y-auto p-6">
                <!-- Cart items will be added here dynamically -->
                <div class="text-center py-8">
                    <i class="fas fa-shopping-cart text-4xl text-gray-300 mb-4"></i>
                    <p class="text-gray-500">Votre panier est vide</p>
                </div>
            </div>

            <div class="p-6 border-t border-gray-200">
                <div class="flex justify-between mb-4">
                    <span class="text-lg font-semibold">Total :</span>
                    <span id="cartTotal" class="text-lg font-bold">0 DT</span>
                </div>
                <button id="proceedCheckout" class="w-full py-3 bg-green-600 text-white font-bold rounded-lg hover:bg-green-700 mb-3">Passer au paiement</button>
                <button id="continueShopping" class="w-full py-3 border border-gray-300 text-gray-700 font-bold rounded-lg hover:bg-gray-50">Continuer mes achats</button>
            </div>
        </div>
    </div>
    <!-- Checkout Modal -->
    <div id="checkoutModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-lg shadow-xl w-full max-w-2xl">
            <div class="p-8">
                <div class="flex justify-between items-center mb-6">
                    <h3 class="text-2xl font-bold">Paiement sécurisé</h3>
                    <button id="closeCheckoutModal" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times text-2xl"></i>
                    </button>
                </div>

                <div class="grid md:grid-cols-2 gap-8">
                    <div>
                        <h4 class="text-lg font-semibold mb-4">Votre commande</h4>
                        <div id="checkoutItems" class="mb-6">
                            <!-- Order items will be added here dynamically -->
                        </div>

                        <div class="border-t border-gray-200 pt-4">
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Sous-total :</span>
                                <span id="checkoutSubtotal" class="font-bold">0 DT</span>
                            </div>
                            <div class="flex justify-between mb-2">
                                <span class="text-gray-600">Frais de service :</span>
                                <span class="font-bold">2 DT</span>
                            </div>
                            <div class="flex justify-between text-lg font-bold mt-4">
                                <span>Total :</span>
                                <span id="checkoutTotal">0 DT</span>
                            </div>
                        </div>
                    </div>

                    <div>
                        <h4 class="text-lg font-semibold mb-4">Méthode de paiement</h4>

                        <div class="mb-6">
                            <div class="flex items-center">
                                <input type="radio" id="stripe" name="payment" class="mr-2">
                                <label for="stripe" class="flex items-center">
                                    <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/ba/Stripe_Logo%2C_revised_2016.svg/1920px-Stripe_Logo%2C_revised_2016.svg.png" alt="Stripe" class="h-6 mr-2">
                                    Stripe
                                </label>
                            </div>
                        </div>

                        <div class="bg-red-50 p-4 rounded-lg mb-6">
                            <h5 class="font-semibold mb-2">Billets numériques</h5>
                            <p class="text-sm text-gray-600">Vos billets seront envoyés par email après confirmation du paiement. Vous pouvez également les télécharger depuis votre compte.</p>
                        </div>

                        <button id="confirmPayment" class="w-full py-3 bg-green-600 text-white font-bold rounded-lg hover:bg-green-700">Confirmer le paiement</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div id="confirmationModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="bg-white rounded-lg shadow-xl w-full max-w-md">
            <div class="p-8 text-center">
                <div class="mb-6">
                    <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-check text-green-600 text-2xl"></i>
                    </div>
                    <h3 class="text-2xl font-bold mb-2">Paiement confirmé !</h3>
                    <p class="text-gray-600">Merci pour votre achat. Vos billets ont été envoyés à votre adresse email.</p>
                </div>

                <div class="bg-gray-50 p-4 rounded-lg mb-6">
                    <div class="flex justify-center mb-4">
                        <div class="qr-code">
                            <!-- QR Code would be generated here in a real app -->
                            <div class="flex items-center justify-center h-full">
                                <i class="fas fa-qrcode text-4xl text-gray-400"></i>
                            </div>
                        </div>
                    </div>
                    <p class="text-sm font-semibold">EST vs CA - 15 May 2025</p>
                    <p class="text-sm text-gray-600">Tribune Nord - Place N4</p>
                </div>

                <div class="flex flex-col space-y-3">
                    <button id="viewTickets" class="px-6 py-3 bg-red-600 text-white font-bold rounded-lg hover:bg-red-700">Voir mes billets</button>
                    <button id="closeConfirmation" class="px-6 py-3 border border-gray-300 text-gray-700 font-bold rounded-lg hover:bg-gray-50">Retour à l'accueil</button>
                </div>
            </div>
        </div>
    </div>
</main>

{# --- FOOTER --- #}
<footer class="bg-gray-800 text-white py-12 mt-10">
    <div class="container mx-auto px-4">
        <div class="mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2025 EasyTicket. Tous droits réservés.</p>
            <div class="mt-4">
                <p class="mb-2">Développé par :</p>
                <div class="flex justify-center space-x-8 mb-3">
                    <div>
                        <p class="font-medium">Amine Kilani</p>
                        <div class="flex justify-center space-x-2 mt-1">
                            <a href="https://www.linkedin.com/in/aminekilani" target="_blank" class="text-gray-400 hover:text-white">
                                <i class="fab fa-linkedin"></i>
                            </a>
                            <a href="https://github.com/amineekilani" target="_blank" class="text-gray-400 hover:text-white">
                                <i class="fab fa-github"></i>
                            </a>
                        </div>
                    </div>
                    <div>
                        <p class="font-medium">Baha Eddine Manai</p>
                        <div class="flex justify-center space-x-2 mt-1">
                            <a href="https://www.linkedin.com/in/baha-manai" target="_blank" class="text-gray-400 hover:text-white">
                                <i class="fab fa-linkedin"></i>
                            </a>
                            <a href="https://github.com/BahaManai" target="_blank" class="text-gray-400 hover:text-white">
                                <i class="fab fa-github"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <p class="text-sm">Projet supervisé par Mme Nesrine Elleuch</p>
            </div>
        </div>
    </div>
</footer>

{% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            updateCartCount();

            // Gestion du panier
            const cartBtn = document.getElementById('cartBtn');
            const cartSidebar = document.getElementById('cartSidebar');
            const closeCart = document.getElementById('closeCart');
            const proceedCheckout = document.getElementById('proceedCheckout');
            const checkoutModal = document.getElementById('checkoutModal');
            const closeCheckoutModal = document.getElementById('closeCheckoutModal');
            const continueShopping = document.getElementById('continueShopping');

            // Check authentication status
            const isAuthenticated = {{ app.user ? 'true' : 'false' }};

            if (cartBtn && cartSidebar) {
                cartBtn.addEventListener('click', async (e) => {
                    e.preventDefault();
                    await updateCartItems();
                    cartSidebar.classList.remove('translate-x-full');
                    document.body.style.overflow = 'hidden';
                });
            }

            if (closeCart) {
                closeCart.addEventListener('click', () => {
                    cartSidebar.classList.add('translate-x-full');
                    document.body.style.overflow = 'auto';
                });
            }

            if (continueShopping) {
                continueShopping.addEventListener('click', () => {
                    cartSidebar.classList.add('translate-x-full');
                    document.body.style.overflow = 'auto';
                });
            }

            // Gestion du paiement
            if (proceedCheckout && checkoutModal) {
                proceedCheckout.addEventListener('click', async () => {
                    if (!isAuthenticated) {
                        // Set flash message via AJAX
                        try {
                            await fetch('/set-flash-message', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'X-Requested-With': 'XMLHttpRequest'
                                },
                                body: JSON.stringify({
                                    type: 'warning',
                                    message: 'Vous devez être connecté pour procéder au paiement.'
                                })
                            });
                        } catch (error) {
                            console.error('Error setting flash message:', error);
                        }
                        // Redirect to login page
                        window.location.href = '{{ path('app_login') }}';
                        return;
                    }

                    // Fermer le sidebar du panier
                    cartSidebar.classList.add('translate-x-full');

                    // Afficher les éléments du panier dans la modal de paiement
                    await updateCheckoutItems();

                    // Ouvrir la modal de paiement
                    checkoutModal.classList.remove('hidden');
                });
            }

            if (closeCheckoutModal) {
                closeCheckoutModal.addEventListener('click', () => {
                    checkoutModal.classList.add('hidden');
                    document.body.style.overflow = 'auto';
                });
            }

            // Gestion du bouton "Confirmer le paiement"
            const confirmPayment = document.getElementById('confirmPayment');
            const confirmationModal = document.getElementById('confirmationModal');

            if (confirmPayment) {
                confirmPayment.addEventListener('click', async () => {
                    try {
                        confirmPayment.disabled = true;
                        confirmPayment.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Traitement en cours...';

                        const response = await fetch('/checkout', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        });

                        if (response.ok) {
                            const data = await response.json();

                            if (data.redirect_url) {
                                // Redirection vers Stripe si une URL est fournie
                                window.location.href = data.redirect_url;
                            } else {
                                // Sinon, afficher la confirmation comme avant
                                checkoutModal.classList.add('hidden');
                                confirmationModal.classList.remove('hidden');
                                await updateCartCount();
                            }
                        } else {
                            const errorData = await response.json();
                            alert(errorData.message || 'Erreur lors du traitement du paiement. Veuillez réessayer.');
                        }
                    } catch (error) {
                        console.error('Error during checkout:', error);
                        alert('Erreur lors du traitement du paiement. Veuillez réessayer.');
                    } finally {
                        confirmPayment.disabled = false;
                        confirmPayment.innerHTML = 'Confirmer le paiement';
                    }
                });
            }

            const closeConfirmation = document.getElementById('closeConfirmation');

            if (closeConfirmation) {
                closeConfirmation.addEventListener('click', () => {
                    confirmationModal.classList.add('hidden');
                    document.body.style.overflow = 'auto';
                    window.location.href = '/'; // Retour à l'accueil
                });
            }

            const viewTickets = document.getElementById('viewTickets');

            if (viewTickets) {
                viewTickets.addEventListener('click', () => {
                    confirmationModal.classList.add('hidden');
                    document.body.style.overflow = 'auto';
                    window.location.href = '/tickets'; // Redirection vers la page des billets
                });
            }

            const userMenuButton = document.getElementById('userMenuButton');
            const userMenu = document.getElementById('userMenu');

            if (userMenuButton && userMenu) {
                userMenuButton.addEventListener('click', () => {
                    userMenu.classList.toggle('hidden');
                });

                // Fermer le menu si on clique en dehors
                document.addEventListener('click', (event) => {
                    if (!userMenuButton.contains(event.target) && !userMenu.contains(event.target)) {
                        userMenu.classList.add('hidden');
                    }
                });
            }
        });

        async function updateCartCount() {
            try {
                const response = await fetch('/cart/count');
                const data = await response.json();
                const cartCount = document.getElementById('cartCount');

                if (data.count > 0) {
                    cartCount.textContent = data.count;
                    cartCount.classList.remove('hidden');
                } else {
                    cartCount.classList.add('hidden');
                }
            } catch (error) {
                console.error('Error fetching cart count:', error);
            }
        }

        async function updateCartItems() {
            try {
                const response = await fetch('/cart/items');
                const cart = await response.json();
                const cartItemsContainer = document.getElementById('cartItems');
                const cartTotalElement = document.getElementById('cartTotal');

                if (cart.length === 0) {
                    cartItemsContainer.innerHTML = `
                    <div class="text-center py-8">
                        <i class="fas fa-shopping-cart text-4xl text-gray-300 mb-4"></i>
                        <p class="text-gray-500">Votre panier est vide</p>
                    </div>
                `;
                    cartTotalElement.textContent = '0 DT';
                    return;
                }

                let html = '';
                let total = 0;
                const matches = {};

                cart.forEach(item => {
                    if (!matches[item.match]) matches[item.match] = [];
                    matches[item.match].push(item);
                });

                Object.keys(matches).forEach(match => {
                    html += `<div class="mb-6 pb-6 border-b border-gray-200">
                    <h4 class="font-semibold mb-3">${match}</h4>`;

                    let matchTotal = 0;

                    matches[match].forEach(item => {
                        html += `
                    <div class="flex justify-between items-center py-2">
                        <div class="flex items-center">
                            <span class="font-bold mr-4">${item.price} DT</span>
                            <button class="text-red-500 hover:text-red-700 remove-item"
                                    data-id="${item.id}">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>`;
                        matchTotal += item.price;
                        total += item.price;
                    });

                    html += `<div class="flex justify-between pt-2 mt-2 border-t border-gray-200">
                    <span class="font-medium">Total pour ce match :</span>
                    <span class="font-bold">${matchTotal} DT</span>
                </div></div>`;
                });

                cartItemsContainer.innerHTML = html;
                cartTotalElement.textContent = `${total} DT`;

                // Gestion suppression éléments
                document.querySelectorAll('.remove-item').forEach(btn => {
                    btn.addEventListener('click', async (e) => {
                        const itemId = e.target.closest('button').getAttribute('data-id');

                        try {
                            const response = await fetch(`/cart/remove/${itemId}`, {
                                method: 'DELETE'
                            });

                            if (response.ok) {
                                await updateCartItems();
                                await updateCartCount();
                            }
                        } catch (error) {
                            console.error('Error removing item:', error);
                        }
                    });
                });
            } catch (error) {
                console.error('Error fetching cart items:', error);
            }
        }

        async function updateCheckoutItems() {
            try {
                const response = await fetch('/cart/items');
                const cart = await response.json();
                const checkoutItemsContainer = document.getElementById('checkoutItems');
                const checkoutSubtotal = document.getElementById('checkoutSubtotal');
                const checkoutTotal = document.getElementById('checkoutTotal');

                if (cart.length === 0) {
                    checkoutItemsContainer.innerHTML = '<p class="text-gray-500">Votre panier est vide</p>';
                    checkoutSubtotal.textContent = '0 DT';
                    checkoutTotal.textContent = '2 DT'; // Frais de service
                    return;
                }

                let html = '';
                let total = 0;
                const matches = {};

                cart.forEach(item => {
                    if (!matches[item.match]) matches[item.match] = [];
                    matches[item.match].push(item);
                });

                Object.keys(matches).forEach(match => {
                    html += `<div class="mb-4">
                    <h5 class="font-semibold">${match}</h5>`;

                    matches[match].forEach(item => {
                        html += `<div class="flex justify-between text-sm py-1">
                        <span>${item.price} DT</span>
                    </div>`;
                        total += item.price;
                    });

                    html += `</div>`;
                });

                checkoutItemsContainer.innerHTML = html;
                checkoutSubtotal.textContent = `${total} DT`;
                checkoutTotal.textContent = `${total + 2} DT`; // Ajouter les frais de service
            } catch (error) {
                console.error('Error fetching checkout items:', error);
            }
        }
    </script>
{% endblock %}
</body>
</html>
